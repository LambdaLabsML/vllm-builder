name: Build vLLM Docker Image Matrix

env:
  PARALLELISM: 1
  TORCH_CUDA_ARCH_LIST: 9.0a
  VLLM_FA_CMAKE_GPU_ARCHES: 90a-real
  XFORMERS_REF: v0.0.30
  XFORMERS_BUILD_VERSION: 0.0.30+cu128
  FLASHINFER_REF: v0.2.6.post1
  FLASHINFER_BUILD_SUFFIX: cu128
  VLLM_REF: v0.9.0.1
  VLLM_BUILD_VERSION: 0.9.0.1

on:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        arch: [amd64, arm64]
        cuda_version: [12.8.1]
        image_distro: [ubuntu22.04]
    runs-on: [self-hosted, "${{ matrix.arch }}"]
    steps:
      - name: Prepare some env vars
        run: |
          echo "GHCR_IMAGE=ghcr.io/${GITHUB_REPOSITORY@L}" >> ${GITHUB_ENV}
          CUDA_VERSION=${{ matrix.cuda_version }}
          CUDA_SHORT=${CUDA_VERSION%.*}
          echo "CUDA_TAG=${CUDA_SHORT//./}" >> ${GITHUB_ENV}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [worker.oci]
              max-parallelism = ${{ env.PARALLELISM }}

      - name: Build and push builder image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            CUDA_VERSION=${{ matrix.cuda_version }}
            IMAGE_DISTRO=${{ matrix.image_distro }}
            TORCH_CUDA_ARCH_LIST=${{ env.TORCH_CUDA_ARCH_LIST }}
            VLLM_FA_CMAKE_GPU_ARCHES=${{ env.VLLM_FA_CMAKE_GPU_ARCHES }}
            FLASHINFER_REF=${{ env.FLASHINFER_REF }}
            FLASHINFER_BUILD_SUFFIX=${{ env.FLASHINFER_BUILD_SUFFIX }}
            VLLM_REF=${{ env.VLLM_REF }}
            VLLM_BUILD_VERSION=${{ env.VLLM_BUILD_VERSION }}
            XFORMERS_REF=${{ env.XFORMERS_REF }}
            XFORMERS_BUILD_VERSION=${{ env.XFORMERS_BUILD_VERSION }}
          cache-from: type=registry,ref=${{ env.GHCR_IMAGE }}:cache-cu${{ env.CUDA_TAG }}-${{ matrix.image_distro }}-${{ matrix.arch }}
          cache-to: type=registry,ref=${{ env.GHCR_IMAGE }}:cache-cu${{ env.CUDA_TAG }}-${{ matrix.image_distro }}-${{ matrix.arch }},mode=max
          context: .
          file: Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ${{ env.GHCR_IMAGE }}:${{ env.VLLM_REF }}-cu${{ env.CUDA_TAG }}-${{ matrix.image_distro }}-${{ matrix.arch }}

  # Fix this to use matrix and handle imagetools create --append
  ghcr:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Prepare some env vars
        run: |
          echo "GHCR_IMAGE=ghcr.io/${GITHUB_REPOSITORY@L}" >> ${GITHUB_ENV}
          echo "CUDA_TAG=124" >> ${GITHUB_ENV}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag images
        run: |
          TAGS=(${VLLM_REF}-cu${CUDA_TAG}-ubuntu22.04-{amd,arm}64)
          docker buildx imagetools create -t ${GHCR_IMAGE}:${VLLM_REF} ${TAGS[@]/#/${GHCR_IMAGE}:}
          docker buildx imagetools create -t ${GHCR_IMAGE}:latest ${TAGS[@]/#/${GHCR_IMAGE}:}
